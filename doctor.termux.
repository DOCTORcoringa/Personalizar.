import os
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt, IntPrompt
from pyfiglet import Figlet

console = Console()

# Configs de fontes e cores
FONT_OPTIONS = {
    1: 'standard', 2: 'slant', 3: 'block', 4: 'banner', 
    5: '3d', 6: 'big', 7: 'doom'
}
PANEL_COLORS = [
    'red', 'green', 'blue', 'yellow', 'purple', 'cyan', 'white'
]

def clear_screen():
    os.system('clear' if os.name == 'posix' else 'cls')

def select_font():
    console.print("\n[bold]Escolha a fonte do banner:[/bold]")
    for k,v in FONT_OPTIONS.items():
        console.print(f"  [cyan]{k}[/cyan]) {v.capitalize()}")
    while True:
        escolha = IntPrompt.ask("Digite o número da fonte", default=1)
        if escolha in FONT_OPTIONS:
            return FONT_OPTIONS[escolha]
        console.print("[red]Opção inválida! Tente novamente.[/]")

def select_color():
    console.print("\n[bold]Escolha a cor do painel:[/bold]")
    for i, color in enumerate(PANEL_COLORS, 1):
        console.print(f"  [{color}]{i}) {color.capitalize()}[/]")
    while True:
        escolha = IntPrompt.ask("Digite o número da cor", default=2)
        if 1 <= escolha <= len(PANEL_COLORS):
            return PANEL_COLORS[escolha - 1]
        console.print("[red]Opção inválida! Tente novamente.[/]")

def get_name():
    console.print(Panel("Digite seu nome para o banner:", style="bold blue"))
    return Prompt.ask(">>>")

def ask_password():
    resp = Prompt.ask("Deseja criar uma senha para proteger o Termux? (s/n)", choices=["s","n"], default="n")
    if resp == "s":
        return Prompt.ask("Digite a senha", password=True)
    return ""

def create_panel(name, font, color):
    f = Figlet(font=font)
    ascii_art = f.renderText(name)
    painel = Panel(ascii_art + f"\nBem-vindo(a), [bold]{name}[/bold]!", title=f"[{color}]Painel Personalizado[/]", subtitle="Crie seu terminal", style=color)
    console.print(painel)

def save_config(name, font, color, prompt_color, senha):
    home = os.path.expanduser("~")
    config_path = os.path.join(home, ".termux_config")
    bashrc_path = os.path.join(home, ".bashrc")

    with open(config_path, "w") as f:
        f.write(f"NOME='{name}'\n")
        f.write(f"SENHA='{senha}'\n")
        f.write(f"COR_BANNER='32'\n")  # Verde fixo para banner para simplificação
        f.write(f"COR_PROMPT='32'\n")  # Verde fixo para prompt
        f.write(f"FONTE_BANNER='{font}'\n")

    bashrc_content = f"""
source ~/.termux_config
clear

typed_text() {{
  texto="$1"
  delay=${{2:-0.07}}
  for ((i=0; i<${{#texto}}; i++)); do
    echo -n "${{texto:i:1}}"
    sleep $delay
  done
  echo ""
}}

echo -e "\\e[32m"
typed_text "Criado por Doctor Coringa Lunático..."
typed_text "O mestre das linhas de código obscuras."
typed_text "Aqui começa sua jornada hacker."
echo -e "\\e[0m"
sleep 1
clear

echo -e "\\e[1;32m"
figlet -f "$FONTE_BANNER" "$NOME"
echo -e "\\e[0m"

if [ ! -z "$SENHA" ]; then
  for i in {{1..3}}; do
    echo -n "Digite a senha para continuar: "
    read -s input_senha
    echo
    if [ "$input_senha" = "$SENHA" ]; then
      break
    else
      echo "Senha incorreta. Tente novamente."
    fi
    if [ $i -eq 3 ]; then
      echo "Falha na autenticação, saindo..."
      exit 1
    fi
  done
fi

PS1="\\[\\033[1;32m\\]$NOME \\[\\033[0m\\]\\$ "
"""

    with open(bashrc_path, "w") as f:
        f.write(bashrc_content)

def main():
    clear_screen()
    console.print(Panel("[bold cyan]Painel de Personalização do Termux[/bold cyan]", style="green"))
    name = get_name()
    font = select_font()
    color = select_color()
    prompt_color = select_color()
    senha = ask_password()
    clear_screen()
    create_panel(name, font, color)
    save_config(name, font, color, prompt_color, senha)
    console.print("\n[green]Configuração salva! Reinicie o Termux para aplicar.[/green]\n")

if __name__ == "__main__":
    main()
