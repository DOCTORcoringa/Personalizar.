#!/usr/bin/env python3
import curses
import os
import getpass

fontes = ["3d", "doom", "larry3d", "starwars", "cybermedium", "speed"]
cores = {
    "Ciano": "36",
    "Azul": "34",
    "Verde": "32",
    "Magenta": "35",
    "Amarelo": "33",
    "Branco": "37",
    "Azul Brilhante": "94",
    "Verde Brilhante": "92",
    "Ciano Brilhante": "96",
    "Magenta Brilhante": "95"
}

def menu_select(stdscr, titulo, opcoes):
    curses.curs_set(0)  # Ocultar cursor
    stdscr.clear()
    k = 0
    pos = 0
    while True:
        stdscr.clear()
        h, w = stdscr.getmaxyx()
        stdscr.addstr(1, (w - len(titulo)) // 2, titulo, curses.A_BOLD | curses.A_UNDERLINE)

        for i, opcao in enumerate(opcoes):
            x = 4
            y = 3 + i
            if i == pos:
                stdscr.attron(curses.color_pair(1))
                stdscr.addstr(y, x, f"> {opcao}")
                stdscr.attroff(curses.color_pair(1))
            else:
                stdscr.addstr(y, x, "  " + opcao)
        stdscr.refresh()

        k = stdscr.getch()
        if k == curses.KEY_UP:
            pos = (pos - 1) % len(opcoes)
        elif k == curses.KEY_DOWN:
            pos = (pos + 1) % len(opcoes)
        elif k in [curses.KEY_ENTER, ord('\n')]:
            return opcoes[pos]

def input_box(stdscr, prompt):
    curses.echo()
    stdscr.clear()
    h, w = stdscr.getmaxyx()
    stdscr.addstr(h//2, (w - len(prompt)) // 2, prompt)
    stdscr.refresh()
    entrada = stdscr.getstr(h//2 + 1, (w - 20) // 2, 20).decode()
    curses.noecho()
    return entrada

def yes_no(stdscr, pergunta):
    curses.curs_set(0)
    stdscr.clear()
    h, w = stdscr.getmaxyx()
    pergunta_texto = pergunta + " (s/n)"
    while True:
        stdscr.clear()
        stdscr.addstr(h//2, (w - len(pergunta_texto))//2, pergunta_texto)
        stdscr.refresh()
        k = stdscr.getch()
        if k in [ord('s'), ord('S')]:
            return True
        elif k in [ord('n'), ord('N')]:
            return False

def main(stdscr):
    curses.start_color()
    curses.use_default_colors()
    curses.init_pair(1, curses.COLOR_BLACK, curses.COLOR_GREEN)

    # Mensagem inicial
    stdscr.clear()
    h, w = stdscr.getmaxyx()
    mensagem = "Criado por Doctor Coringa Lunático\nO mestre das linhas de código obscuras\nAperte qualquer tecla para continuar..."
    for idx, linha in enumerate(mensagem.split('\n')):
        stdscr.addstr(h//2 - 1 + idx, (w - len(linha))//2, linha, curses.A_BOLD | curses.color_pair(1))
    stdscr.refresh()
    stdscr.getch()

    # Nome
    nome = input_box(stdscr, "Digite seu nome para o banner:")

    # Fonte
    fonte = menu_select(stdscr, "Escolha a fonte do banner:", fontes)

    # Cor do banner
    cor_banner = menu_select(stdscr, "Escolha a cor do banner:", list(cores.keys()))

    # Cor do prompt
    cor_prompt = menu_select(stdscr, "Escolha a cor do prompt:", list(cores.keys()))

    # Pergunta senha
    quer_senha = yes_no(stdscr, "Deseja definir uma senha para proteger o Termux?")

    senha = ""
    if quer_senha:
        curses.echo()
        stdscr.clear()
        stdscr.addstr(h//2, (w - 30)//2, "Digite a senha (não aparece enquanto digita):")
        stdscr.refresh()
        senha = stdscr.getstr(h//2 + 1, (w - 20)//2, 20).decode()
        curses.noecho()

    # Gravar arquivos
    home = os.path.expanduser("~")
    config_path = os.path.join(home, ".termux_config")
    bashrc_path = os.path.join(home, ".bashrc")

    with open(config_path, "w") as f:
        f.write(f"NOME='{nome}'\n")
        f.write(f"SENHA='{senha}'\n")
        f.write(f"COR_BANNER='{cores[cor_banner]}'\n")
        f.write(f"COR_PROMPT='{cores[cor_prompt]}'\n")
        f.write(f"FONTE_BANNER='{fonte}'\n")

    bashrc_content = f"""
source ~/.termux_config
clear

typed_text() {{
  texto="$1"
  delay=${{2:-0.07}}
  for ((i=0; i<${{#texto}}; i++)); do
    echo -n "${{texto:i:1}}"
    sleep $delay
  done
  echo ""
}}

echo -e "\\e[32m"
typed_text "Criado por Doctor Coringa Lunático..."
typed_text "O mestre das linhas de código obscuras."
typed_text "Aqui começa sua jornada hacker."
echo -e "\\e[0m"
sleep 1
clear

echo -e "\\e[1;${{COR_BANNER}}m"
figlet -f "${{FONTE_BANNER}}" "${{NOME}}"
echo -e "\\e[0m"

if [ ! -z "${{SENHA}}" ]; then
  for i in {{1..3}}; do
    echo -n "Digite a senha para continuar: "
    read -s input_senha
    echo
    if [ "$input_senha" = "${{SENHA}}" ]; then
      break
    else
      echo "Senha incorreta. Tente novamente."
    fi
    if [ $i -eq 3 ]; then
      echo "Falha na autenticação, saindo..."
      exit 1
    fi
  done
fi

PS1="\\[\\033[1;${{COR_PROMPT}}m\\]${{NOME}} \\[\\033[0m\\]\\$ "
# PROMPT_COMMAND='clear' # removido para não limpar a tela a todo momento
"""

    with open(bashrc_path, "w") as f:
        f.write(bashrc_content)

    stdscr.clear()
    stdscr.addstr(h//2, (w - 30)//2, "Configuração concluída! Reinicie o Termux.")
    stdscr.refresh()
    stdscr.getch()

if __name__ == "__main__":
    curses.wrapper(main)
