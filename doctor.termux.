#!/usr/bin/env python3
import os
import getpass

def exibir_menu(titulo, opcoes):
    print(f"\n=== {titulo} ===")
    for i, opcao in enumerate(opcoes, 1):
        print(f"{i}) {opcao}")
    while True:
        escolha = input("Escolha um número: ").strip()
        if escolha.isdigit():
            n = int(escolha)
            if 1 <= n <= len(opcoes):
                return opcoes[n-1]
        print("Opção inválida, tente novamente.")

def pergunta_sim_ou_nao(pergunta):
    while True:
        resposta = input(pergunta + " (s/n): ").strip().lower()
        if resposta in ['s', 'n']:
            return resposta == 's'
        print("Resposta inválida, digite 's' para sim ou 'n' para não.")

def main():
    # Opções para fontes e cores
    fontes = ["3d", "doom", "larry3d", "starwars", "cybermedium", "speed"]
    cores = {
        "Ciano": "36",
        "Azul": "34",
        "Verde": "32",
        "Magenta": "35",
        "Amarelo": "33",
        "Branco": "37",
        "Azul Brilhante": "94",
        "Verde Brilhante": "92",
        "Ciano Brilhante": "96",
        "Magenta Brilhante": "95"
    }

    print("Bem-vindo ao painel de configuração do Termux personalizado!")

    nome = input("Digite seu nome para o banner: ").strip()

    fonte_escolhida = exibir_menu("Escolha a fonte do banner (estilo 3D/hack):", fontes)

    cor_banner = exibir_menu("Escolha a cor do banner:", list(cores.keys()))

    cor_prompt = exibir_menu("Escolha a cor do prompt (estilo Falcon hack):", list(cores.keys()))

    if pergunta_sim_ou_nao("Deseja definir uma senha para proteger o Termux?"):
        senha = getpass.getpass("Digite a senha (não aparece enquanto digita): ").strip()
    else:
        senha = ""

    # Caminhos dos arquivos
    home = os.path.expanduser("~")
    caminho_config = os.path.join(home, ".termux_config")
    caminho_bashrc = os.path.join(home, ".bashrc")

    # Gravar arquivo de configuração
    with open(caminho_config, "w") as f:
        f.write(f"NOME='{nome}'\n")
        f.write(f"SENHA='{senha}'\n")
        f.write(f"COR_BANNER='{cores[cor_banner]}'\n")
        f.write(f"COR_PROMPT='{cores[cor_prompt]}'\n")
        f.write(f"FONTE_BANNER='{fonte_escolhida}'\n")

    # Criar .bashrc para usar as configurações
    bashrc_content = f"""
source ~/.termux_config
clear

typed_text() {{
  texto="$1"
  delay=${{2:-0.07}}
  for ((i=0; i<${{#texto}}; i++)); do
    echo -n "${{texto:i:1}}"
    sleep $delay
  done
  echo ""
}}

echo -e "\\e[35m"
typed_text "Criado por Doctor Coringa Lunático..."
typed_text "O mestre das linhas de código obscuras."
typed_text "Aqui começa sua jornada hacker."
echo ""
typed_text "Aproveite e personalize sua área de trabalho ao máximo!"
echo -e "\\e[0m"
sleep 1
clear

echo -e "\\e[1;${{COR_BANNER}}m"
figlet -f "${{FONTE_BANNER}}" "${{NOME}}"
echo -e "\\e[0m"

if [ ! -z "${{SENHA}}" ]; then
  for i in {{1..3}}; do
    echo -n "Digite a senha para continuar: "
    read -s input_senha
    echo
    if [ "$input_senha" = "${{SENHA}}" ]; then
      break
    else
      echo "Senha incorreta. Tente novamente."
    fi
    if [ $i -eq 3 ]; then
      echo "Falha na autenticação, saindo..."
      exit 1
    fi
  done
fi

PS1="\\[\\033[1;${{COR_PROMPT}}m\\]${{NOME}} \\[\\033[0m\\]\\$ "
# PROMPT_COMMAND='clear' # removido para não limpar tela a todo momento
"""

    with open(caminho_bashrc, "w") as f:
        f.write(bashrc_content)

    print("\nConfiguração concluída! Reinicie o Termux para ver seu terminal personalizado.\n")

if __name__ == "__main__":
    main()
